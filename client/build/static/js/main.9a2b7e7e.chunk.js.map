{"version":3,"sources":["components/AllPets.js","containers/Home.js","containers/NavBar.js","components/ViewPet.js","components/UpdatePet.js","components/NewPet.js","App.js","serviceWorker.js","index.js"],"names":["AllPets","props","useState","pets","shelter","setShelter","useEffect","className","onClick","e","temp","arr","key","i","length","j","bubble","map","pet","_id","name","petType","to","Home","setPets","axios","get","then","res","data","NavBar","style","color","ViewPet","setPet","id","adoptPet","delete","console","log","filter","removeFromDom","navigate","catch","err","description","skillOne","skillTwo","skillThree","UpdatePet","setName","setPetType","setDescription","setSkillOne","setSkillTwo","setSkillThree","errors","setErrors","onSubmit","preventDefault","updatedPet","put","message","type","value","onChange","target","NewPet","newPet","post","placeholder","rows","cols","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.9a2b7e7e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link } from '@reach/router';\r\n\r\nfunction bubble(arr, key) {\r\n\tfor (let i = 0; i < arr.length; i++) {\r\n\t\t\tfor (let j = 0; j < arr.length - i - 1; j++) {\r\n\t\t\t\t\tif (arr[j][key] > arr[j + 1][key]) {\r\n\t\t\t\t\t\t\t[arr[j], arr[j + 1]] = [arr[j + 1], arr[j]];\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t}\r\n\t}\r\n\r\n\tconst AllPets = (props) => {\r\n\t\tconst [shelter, setShelter] = useState(props.pets)\r\n\r\n\t\tconst sortByType = (e) => {\r\n\t\t\tconst temp = [...shelter];\r\n\t\t\tbubble(temp, \"petType\");\r\n\t\t\tsetShelter(temp);\r\n\t\t}\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tsetShelter(props.pets);\r\n\t\t}, [props.pets]);\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<h1>Pet Shelter</h1>\r\n\t\t\t\t\t<h3>Check out some of these pets</h3>\r\n\t\t\t\t\t<button className=\"btn btn-sm btn-success\" onClick={sortByType}>Sort</button>\r\n\t\t\t\t\t<table className=\"table table-striped\">\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Name</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Type</th>\r\n\t\t\t\t\t\t\t\t\t\t\t<th>Actions</th>\r\n\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t\t{shelter.map((pet, _id) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={pet._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{pet.name}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>{pet.petType}</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`/pets/${pet._id}`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-dark\">Some information on the Pet</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>{' '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`/pets/${pet._id}/edit`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-warning\">Edit the Pet</button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default AllPets","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\nimport AllPets from '../components/AllPets';\r\n\r\nconst Home = () => {\r\n\tconst [pets, setPets] = useState([])\r\n\r\n\tuseEffect(() => {\r\n\t\t\taxios.get('http://localhost:8000/api/pets')\r\n\t\t\t\t\t.then(res => setPets(res.data))\r\n\r\n\t}, [])\r\n\r\n\r\n\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t\t<AllPets pets={pets} />\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport { Link } from '@reach/router'\r\n\r\n\r\nconst NavBar = () => {\r\n\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t\t<nav className=\"navbar navbar-light bg-light\">\r\n\t\t\t\t\t\t\t<ul className=\"nav\">\r\n\t\t\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Link className=\"nav-link\" to='/' style={{ color: 'black' }}>Home</Link>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Link className=\"nav-link\" to='/new' style={{ color: 'black' }}>Add</Link>\r\n\t\t\t\t\t\t\t\t\t</li>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</nav>\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default NavBar","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport { navigate } from '@reach/router';\r\nimport { Link } from '@reach/router'\r\n\r\n\r\nconst ViewPet = (props) => {\r\n\tconst [pets, setPets] = useState([])\r\n\r\n\tconst [pet, setPet] = useState({})\r\n\r\n\tuseEffect(() => {\r\n\t\t\taxios.get(`http://localhost:8000/api/pets/${props.id}`)\r\n\t\t\t\t\t.then(res => { setPet({ ...res.data }) })\r\n\t}, [])\r\n\tconst removeFromDom = _id => {\r\n\t\t\tsetPets(pets.filter(pet => pet._id !== _id));\r\n\t}\r\n\tconst adoptPet = (_id) => {\r\n\t\t\taxios.delete(`http://localhost:8000/api/pets/${_id}`)\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\t\tconsole.log(res)\r\n\t\t\t\t\t\t\tremoveFromDom(_id)\r\n\t\t\t\t\t\t\tnavigate('/')\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(err => console.log(err))\r\n\t}\r\n\r\n\treturn (\r\n\r\n\t\t\t<div className=\"col-sm-4 mb-2\">\r\n\t\t\t<h6>Click Home to Go back home or add another pet by clicking add!</h6>\r\n\t\t\t<h2>Pet viewing page.</h2>\r\n\t\t\t<h4>This pet needs a new home</h4>\r\n\t\t\t<h5>Details about {pet.name}</h5>\r\n\r\n\t\t\t\t\t<div className=\"card text-dark bg-light mb-2\">\r\n\t\t\t\t\t\t\t<div className=\"card-header\">Information on: {pet.name}</div>\r\n\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t<p className=\"card-text\"><em>Type: {pet.petType}</em></p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"card-text\">Description: {pet.description}</p>\r\n\t\t\t\t\t\t\t\t\t<p className=\"card-text\">Skills:</p>\r\n\r\n\t\t\t\t\t\t\t\t\t<ul className=\"card-text\">\r\n\t\t\t\t\t\t\t\t\t\t\t<li>{pet.skillOne}</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>{pet.skillTwo}</li>\r\n\t\t\t\t\t\t\t\t\t\t\t<li>{pet.skillThree}</li>\r\n\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"card-footer\">\r\n\t\t\t\t\t\t\t\t\t<button className=\"btn btn-warning\" onClick={(e) => { adoptPet(pet._id) }}>Adopt this Pet</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t<Link to={`/`}>\r\n\t\t\t\t\t\t\t\t\t<button className=\"btn btn-secondary btn-block\">Go Back</button>\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ViewPet","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { navigate } from '@reach/router'\r\nimport { Link } from '@reach/router'\r\n\r\n\r\nconst UpdatePet = (props) => {\r\n\tconst { id } = props\r\n\tconst [name, setName] = useState('')\r\n\tconst [petType, setPetType] = useState('')\r\n\tconst [description, setDescription] = useState('')\r\n\tconst [skillOne, setSkillOne] = useState('')\r\n\tconst [skillTwo, setSkillTwo] = useState('')\r\n\tconst [skillThree, setSkillThree] = useState('')\r\n\tconst [errors, setErrors] = useState({})\r\n\r\n\tuseEffect(() => {\r\n\t\t\taxios.get(`http://localhost:8000/api/pets/${id}`)\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\t\tsetName(res.data.name);\r\n\t\t\t\t\t\t\tsetDescription(res.data.description);\r\n\t\t\t\t\t\t\tsetPetType(res.data.petType);\r\n\t\t\t\t\t\t\tsetSkillOne(res.data.skillOne);\r\n\t\t\t\t\t\t\tsetSkillTwo(res.data.skillTwo);\r\n\t\t\t\t\t\t\tsetSkillThree(res.data.skillThree);\r\n\t\t\t\t\t})\r\n\t}, [props])\r\n\r\n\tconst updatePet = (e) => {\r\n\t\t\te.preventDefault();\r\n\t\t\tconst updatedPet = { name, petType, description, skillOne, skillTwo, skillThree }\r\n\t\t\taxios.put(`http://localhost:8000/api/pets/${id}`, updatedPet)\r\n\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\t\tconsole.log(res)\r\n\t\t\t\t\t\t\tif (res.data.errors) {\r\n\t\t\t\t\t\t\t\t\tsetErrors(res.data.errors)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tnavigate(`/pets/${id}`)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(err => console.log(err))\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t\t<div className=\"col-sm-3 \">\r\n\t\t\t\t\t<form onSubmit={updatePet}>\r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t{errors.name ? <p className=\"text-danger\">{errors.name.message}</p> : ''}\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setName(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t{errors.petType ? <p className=\"text-danger\">{errors.petType.message}</p> : ''}\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={petType}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setPetType(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t{errors.description ? <p style={{ color: 'red' }}>{errors.description.message}</p> : \"\"}\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={description}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setDescription(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<p>Skills (optional)</p>\r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={skillOne}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setSkillOne(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={skillTwo}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setSkillTwo(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={skillThree}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => setSkillThree(e.target.value)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<input type=\"submit\" className=\"btn btn-warning btn-block\" value=\"Update\" />\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<br></br>\r\n\t\t\t\t\t<Link to={`/`}>\r\n\t\t\t\t\t\t\t<button className=\"btn btn-danger btn-block\">Cancel</button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default UpdatePet","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { navigate } from '@reach/router';\r\nimport { Link } from '@reach/router'\r\n\r\n\r\nconst NewPet = (props) => {\r\n\tconst [name, setName] = useState('')\r\n\tconst [petType, setPetType] = useState('')\r\n\tconst [description, setDescription] = useState('')\r\n\tconst [skillOne, setSkillOne] = useState('')\r\n\tconst [skillTwo, setSkillTwo] = useState('')\r\n\tconst [skillThree, setSkillThree] = useState('')\r\n\tconst [errors, setErrors] = useState({})\r\n\r\n\tconst onSubmitHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst newPet = { name, petType, description, skillOne, skillTwo, skillThree }\r\n\t\taxios.post('http://localhost:8000/api/pets', newPet)\r\n\t\t\t\t.then(res => {\r\n\t\t\t\t\t\tconsole.log(res)\r\n\t\t\t\t\t\tif (res.data.errors) {\r\n\t\t\t\t\t\t\t\tsetErrors(res.data.errors)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tnavigate('/')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.catch(err => console.log(err))\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"col-sm-3 \">\r\n\t\t\t\t<form onSubmit={onSubmitHandler}>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t{errors.name ? <p className=\"text-danger\">{errors.name.message}</p> : ''}\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"What is your pet's name...\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={e => setName(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t{errors.petType ? <p className=\"text-danger\">{errors.petType.message}</p> : ''}\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"What type of Pet do you have...\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={e => setPetType(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t{errors.description ? <p style={{ color: 'red' }}>{errors.description.message}</p> : \"\"}\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\trows=\"4\"\r\n\t\t\t\t\t\t\t\t\t\tcols=\"30\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Description of your Pet...\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={e => setDescription(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<p>Skills (optional)</p>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Skill 1...\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={e => setSkillOne(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Skill 2...\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={e => setSkillTwo(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"Skill 3...\"\r\n\t\t\t\t\t\t\t\t\t\tonChange={e => setSkillThree(e.target.value)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input type=\"submit\" className=\"btn btn-success btn-block\" value=\"Add Pet\" />\r\n\t\t\t\t</form>\r\n\t\t\t\t<br></br>\r\n\t\t\t\t<Link to={`/`}>\r\n\t\t\t\t\t\t\t<button className=\"btn btn-warning btn-block\">Cancel</button>\r\n\t\t\t\t</Link>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default NewPet","import React from 'react';\nimport './App.css';\nimport Home from './containers/Home';\nimport NavBar from './containers/NavBar';\nimport ViewPet from './components/ViewPet';\nimport UpdatePet from './components/UpdatePet';\nimport NewPet from './components/NewPet';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Router } from '@reach/router';\n\n\n\nfunction App() {\n  return (\n    <div>\n      <NavBar />\n      <Router>\n        <NewPet path='/new' />\n        <Home path='/' />\n        <ViewPet path='/pets/:id' />\n        <ViewPet path='/' />\n        <UpdatePet path='/pets/:id/edit' />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}